{"version":3,"sources":["components/SearchForm.js","components/Header.js","components/Filter.js","components/Counter.js","components/Buttons.js","components/InviteeName.js","components/Invitee.js","components/Invitees.js","App.js","registerServiceWorker.js","index.js"],"names":["SearchForm","props","react_default","a","createElement","onSubmit","type","value","input","placeholder","onChange","onTypeChange","name","Header","components_SearchForm","Filter","onFilter","Counter","numOfInvitees","Invitees","length","confirmedNum","filter","Invitee","confirmed","className","Buttons","onClick","onEdit","isEditing","onRemove","InviteeName","children","components_InviteeName","event","target","checked","onConfirmChange","components_Buttons","isFiltered","map","singleInvitee","index","components_Invitee","key","id","newName","people","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","onFormSubmit","onEditChange","onInviteeNameChange","setState","preventDefault","push","Math","random","toString","substr","property","objectSpread","defineProperty","toggleInviteeProppertyAt","components_Header","components_Filter","components_Counter","components_Invitees","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e8302fcc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction SearchForm (props){\r\n  return(\r\n      <form onSubmit={props.onSubmit}>\r\n          <input type=\"text\" value={props.input} placeholder=\"Invite Someone\" onChange={props.onTypeChange}/>\r\n          <button type=\"submit\" name=\"submit\" value=\"submit\">Submit</button>\r\n      </form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","import React from 'react';\r\nimport SearchForm from './SearchForm';\r\n\r\nfunction Header(props){\r\n  return(\r\n    <header>\r\n      <h1>RSVP</h1>\r\n      <p>App Made By Andrei</p>\r\n      <SearchForm input={props.input} onTypeChange={props.onTypeChange} onSubmit={props.onSubmit}/>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\n\r\nfunction Filter (props){\r\n  return(\r\n    <div>\r\n      <h2>Invitees</h2>\r\n      <label>\r\n        <input type=\"checkbox\" onChange={props.onFilter}/> Hide those who haven't responded\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\n\r\nfunction Counter (props){\r\n  let numOfInvitees = props.Invitees.length;\r\n  let confirmedNum = props.Invitees.filter(Invitee => Invitee.confirmed === true).length;\r\n\r\n  return(\r\n    <table className=\"counter\">\r\n      <tbody>\r\n        <tr>\r\n          <td>Attending:</td>\r\n          <td>{confirmedNum}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Unconfirmed:</td>\r\n          <td>{numOfInvitees - confirmedNum}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Total:</td>\r\n          <td>{numOfInvitees}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Counter;\r\n","import React from 'react';\r\n\r\nfunction Buttons (props){\r\n\r\n  return(\r\n    <div>\r\n      <button onClick={props.onEdit}>{(props.isEditing)? <i className=\"fas fa-save\"></i>: <i className=\"fas fa-edit\"></i> }</button>\r\n      <button className=\"remove\" onClick={props.onRemove}><i className=\"far fa-trash-alt\"></i></button>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction InviteeName (props){\r\n    if(props.isEditing){\r\n      return <input type=\"text\" value={props.children} onChange={props.onChange}/>\r\n    }else{\r\n      return <span>{props.children}</span>\r\n    }\r\n}\r\n\r\nInviteeName.propTypes = {\r\n  onChange:PropTypes.func.isRequired,\r\n  isEditing:PropTypes.bool.isRequired\r\n}\r\n\r\nexport default InviteeName;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Buttons from './Buttons';\r\nimport InviteeName from './InviteeName';\r\n\r\nfunction Invitee (props){\r\n\r\n  return(\r\n    <li className=\"responded\">\r\n      <InviteeName onChange={(event) => props.onChange(event.target.value)} isEditing={props.isEditing}>{props.name}</InviteeName>\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={(props.confirmed)? true : false}\r\n          onChange={props.onConfirmChange}/>\r\n          Confirmed\r\n      </label>\r\n      <Buttons onRemove={props.onRemove} isEditing={props.isEditing} onEdit={props.onEdit}/>\r\n    </li>\r\n  );\r\n}\r\n\r\nInvitee.propTypes = {\r\n  confirmed : PropTypes.bool.isRequired,\r\n  onConfirmChange : PropTypes.func.isRequired\r\n}\r\n\r\nexport default Invitee;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Invitee from './Invitee';\r\n\r\n\r\nfunction Invitees (props){\r\n\r\n  return(\r\n    <ul>\r\n      {(props.input) !== '' ?  <li className=\"pending\"><span>{props.input}</span></li>: null}\r\n\r\n      {props.Invitees.filter(Invitee => !props.isFiltered || Invitee.confirmed ).map(function(singleInvitee,index){\r\n        return <Invitee\r\n                key={index}\r\n                name={singleInvitee.name}\r\n                isEditing={singleInvitee.isEditing}\r\n                onEdit = {function(){\r\n                  props.onEdit(singleInvitee.id)\r\n                }}\r\n                onRemove={function(){\r\n                  props.onRemove(singleInvitee.id)\r\n                }}\r\n                onChange={function(newName){\r\n                  props.onChange(newName,singleInvitee.id)\r\n                }}\r\n                confirmed={singleInvitee.confirmed}\r\n                onConfirmChange={function(){\r\n                  props.onConfirmChange(singleInvitee.id)\r\n                }}/>\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nInvitees.propTypes = {\r\n  Invitees : PropTypes.array.isRequired,\r\n  isFiltered : PropTypes.bool.isRequired,\r\n  input:PropTypes.string.isRequired,\r\n  onEdit:PropTypes.func.isRequired,\r\n  onRemove:PropTypes.func.isRequired,\r\n  onChange:PropTypes.func.isRequired,\r\n  onConfirmChange:PropTypes.func.isRequired,\r\n\r\n}\r\n\r\n\r\nexport default Invitees;\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\n//components\r\nimport Header from './components/Header';\r\nimport Filter from './components/Filter';\r\nimport Counter from './components/Counter';\r\nimport Invitees from './components/Invitees';\r\n\r\nlet people = [\r\n  {\r\n    id : 1,\r\n    name: \"Joel\",\r\n    confirmed : true,\r\n    isEditing : false\r\n\r\n  },\r\n  {\r\n    id : 2,\r\n    name: \"Mike\",\r\n    confirmed : false,\r\n    isEditing : false\r\n  },\r\n  {\r\n    id : 3,\r\n    name: \"Andrew\",\r\n    confirmed : true,\r\n    isEditing : false\r\n\r\n  },\r\n  {\r\n    id : 4,\r\n    name: \"Maria\",\r\n    confirmed : false,\r\n    isEditing : false\r\n  }\r\n];\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      Invitees : [],\r\n      isFiltered: false,\r\n      input :''\r\n    }\r\n\r\n    this.onTypeChange = this.onTypeChange.bind(this);\r\n    this.onFormSubmit = this.onFormSubmit.bind(this);\r\n    this.onConfirmChange = this.onConfirmChange.bind(this);\r\n    this.onEditChange = this.onEditChange.bind(this);\r\n    this.onFilter =  this.onFilter.bind(this);\r\n    this.onInviteeNameChange = this.onInviteeNameChange.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      Invitees: people,\r\n    });\r\n  }\r\n\r\n  onTypeChange(event){\r\n    this.setState({\r\n      input : event.target.value\r\n    });\r\n  }\r\n\r\n  onFormSubmit(event){\r\n    event.preventDefault();\r\n    if(this.state.input !== \"\"){\r\n      this.state.Invitees.push({\r\n        id : Math.random().toString(36).substr(2, 16),\r\n        name : this.state.input,\r\n        confirmed : false\r\n      });\r\n      this.setState(this.state);\r\n      this.setState({\r\n        input : \"\"\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleInviteeProppertyAt(property,id){\r\n    this.setState({\r\n       Invitees : this.state.Invitees.map((Invitee)=>{\r\n         if(id === Invitee.id){\r\n           return {\r\n             ...Invitee,\r\n             [property] : !Invitee[property]\r\n           };\r\n         }\r\n         return Invitee;\r\n       })\r\n    });\r\n\r\n}\r\n\r\nonConfirmChange(id){\r\n  this.toggleInviteeProppertyAt('confirmed',id);\r\n}\r\n\r\nonEditChange(id){\r\n  this.toggleInviteeProppertyAt('isEditing',id);\r\n}\r\n\r\n\r\n  onFilter(){\r\n    this.setState({\r\n      isFiltered : !this.state.isFiltered\r\n    });\r\n  }\r\n\r\n  onInviteeNameChange(newName,id){\r\n\r\n    this.setState({\r\n       Invitees : this.state.Invitees.map((Invitee)=>{\r\n         if(id === Invitee.id){\r\n           return {\r\n             ...Invitee,\r\n              name : newName\r\n           };\r\n         }\r\n         return Invitee;\r\n       })\r\n    });\r\n\r\n  }\r\n\r\n  onRemove(id){\r\n    this.setState({\r\n      Invitees :   this.state.Invitees.filter(Invitee => {\r\n          return id !== Invitee.id;\r\n        }),\r\n    });\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header input={this.state.input} onTypeChange={this.onTypeChange} onSubmit={this.onFormSubmit}/>\r\n        <div className=\"main\">\r\n          <Filter onFilter={this.onFilter}/>\r\n          <Counter Invitees={this.state.Invitees}/>\r\n          <Invitees\r\n            onRemove={function(id){this.onRemove(id)}.bind(this)}\r\n            isFiltered={this.state.isFiltered}\r\n            input={this.state.input}\r\n            Invitees={this.state.Invitees}\r\n            onConfirmChange={function(id){this.onConfirmChange(id)}.bind(this)}\r\n            onChange={function(newName,id){this.onInviteeNameChange(newName,id)}.bind(this)}\r\n            onEdit={function(id){this.onEditChange(id)}.bind(this)}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}